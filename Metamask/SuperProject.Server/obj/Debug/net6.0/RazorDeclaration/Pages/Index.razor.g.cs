// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SuperProject.Server.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Metamask\SuperProject.Server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Metamask\SuperProject.Server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Metamask\SuperProject.Server\_Imports.razor"
using SuperProject.Server;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Metamask\SuperProject.Server\_Imports.razor"
using SuperProject.Server.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Metamask;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Erc20.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Metamask.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Web3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Hex.HexTypes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using Nethereum.Siwe.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
using System.Numerics;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 77 "D:\Metamask\SuperProject.Server\Pages\Index.razor"
          
        bool EthereumAvailable { get; set; }
        string SelectedAccount { get; set; }
        BigInteger SelectedChainId { get; set; }
        string BlockHash { get; set; }
        string ErrorAuthenticateMessage { get; set; }

        protected string AuthenticatedAccount { get; set; }

        protected override async Task OnAfterRenderAsync(bool firstTime)
        {
            if (firstTime)
            {
        
                _ethereumHostProvider.SelectedAccountChanged += HostProvider_SelectedAccountChanged;
                _ethereumHostProvider.NetworkChanged += HostProvider_NetworkChanged;
                _ethereumHostProvider.EnabledChanged += HostProviderOnEnabledChanged;

                EthereumAvailable = await _ethereumHostProvider.CheckProviderAvailabilityAsync();
            }
        }

        private async Task HostProviderOnEnabledChanged(bool enabled)
        {
            if (enabled)
            {
                await GetChainId();
                this.StateHasChanged();
            }
        }

        private async Task GetChainId()
        {
            var web3 = await _ethereumHostProvider.GetWeb3Async();
            var chainId = await web3.Eth.ChainId.SendRequestAsync();
            SelectedChainId = (BigInteger) chainId.Value;
        }

        private async Task HostProvider_SelectedAccountChanged(string account)
        {

            SelectedAccount = account;
            await GetChainId();
            

            this.StateHasChanged();
        }

        private async Task HostProvider_NetworkChanged(int chainId)
        {
            SelectedChainId = chainId;
            this.StateHasChanged();
            await Task.CompletedTask;
        }

        protected async Task GetBlockHashAsync()
        {
            var web3 = await _ethereumHostProvider.GetWeb3Async();
            var block = await web3.Eth.Blocks.GetBlockWithTransactionsByNumber.SendRequestAsync(new HexBigInteger(1));
            BlockHash = block.BlockHash;
        }

        public async Task AuthenticateAsync()
        {

            try
            {
                ErrorAuthenticateMessage = null;
                var siweMessage = await _nethereumSiweAuthenticatorService.RequestUserToSignAuthenticationMessageAsync(new SiweMessage()
                {
                    Address = SelectedAccount,
                    ChainId = SelectedChainId.ToString(),
                    Uri = _navigationManager.ToAbsoluteUri(@"").ToString(),
                    Domain = _navigationManager.ToAbsoluteUri(@"/").Host,
                    Statement = "Please sign in to authenticate to SuperProject",

                });

                AuthenticatedAccount = siweMessage.Address;
            }
            catch (Exception ex)
            {
                ErrorAuthenticateMessage = ex.Message;
            }

        }
    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NethereumSiweAuthenticatorService _nethereumSiweAuthenticatorService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEthereumHostProvider _ethereumHostProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591

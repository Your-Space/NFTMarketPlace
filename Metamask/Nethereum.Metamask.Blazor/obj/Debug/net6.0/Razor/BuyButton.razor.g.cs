#pragma checksum "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f3911c323c9abd87f32d8c8007dd79e54a5936a4"
// <auto-generated/>
#pragma warning disable 1591
namespace Nethereum.Metamask.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Metamask\Nethereum.Metamask.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Nethereum.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using System.Numerics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using NftContractHandler;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Nethereum.Erc20.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Nethereum.Hex.HexTypes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Nethereum.StandardTokenEIP20.ContractDefinition;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using Nethereum.Web3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
using NftProject.Contracts.NFTMarketplace.ContractDefinition;

#line default
#line hidden
#nullable disable
    public partial class BuyButton : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.EditForm>(0);
            __builder.AddAttribute(1, "Model", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 13 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
                 transferModel

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(2, "OnValidSubmit", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Forms.EditContext>(this, 
#nullable restore
#line 13 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
                                                Index

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(3, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>)((context) => (__builder2) => {
                __builder2.AddMarkupContent(4, "<div class=\"form-group\"><button type=\"submit\" class=\"btn btn-success pull-right btn-outline-info\">Buy</button></div>");
            }
            ));
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
#nullable restore
#line 21 "D:\Metamask\Nethereum.Metamask.Blazor\BuyButton.razor"
       
    ERC20TransferModel transferModel = new ERC20TransferModel();
    [Parameter]
    public string TokenId { get; set; }
    [Parameter]
    public string Price { get; set; }
    
    public async Task Index()
    {
        if (MetamaskAvailable && string.IsNullOrEmpty(SelectedAccount))
            await EnableEthereumAsync();
        //Web3 hostProviderWeb3 = await _ethereumHostProvider.GetWeb3Async();
        if (!string.IsNullOrEmpty(SelectedAccount))
        {
            _testExample.Web3 = await _ethereumHostProvider.GetWeb3Async();
            await _testExample.Service.CreateMarketSaleRequestAndWaitForReceiptAsync(GetCreateMarketSaleFunction());
        }

    //    await _testExample.CreateMarketSale(TokenId, BigInteger.Parse(Price));
    // var web3 = await _ethereumHostProvider.GetWeb3Async();
    // var contractHandler = web3.Eth.GetContractQueryHandler<CreateMarketSaleFunction>();
    // var createMarkerSaleMessage = new CreateMarketSaleFunction()
    // {
    //     TokenId =  (BigInteger) TokenId,
    //     AmountToSend = BigInteger.Parse(Price)
    // };
    //await contractHandler.SendRequestAsync(_testExample.ContractAddress, createMarkerSaleMessage);
    //await _testExample.CreateMarketSale(TokenId, BigInteger.Parse(Price));
    }
    
    public CreateMarketSaleFunction GetCreateMarketSaleFunction()
    {
        return new CreateMarketSaleFunction()
        {
            TokenId = BigInteger.Parse(TokenId),
            AmountToSend = BigInteger.Parse(Price)
        };
    }

    bool MetamaskAvailable { get; set; }
    string SelectedAccount { get; set; }
    protected string AuthenticatedAccount { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _ethereumHostProvider.SelectedAccountChanged += MetamaskHostProvider_SelectedAccountChanged;
            MetamaskAvailable = await _ethereumHostProvider.CheckProviderAvailabilityAsync();

            StateHasChanged();
        }
    }

    private async Task MetamaskHostProvider_SelectedAccountChanged(string account)
    {
        SelectedAccount = account;
        this.StateHasChanged();
    }

    protected async Task EnableEthereumAsync()
    {
        SelectedAccount = await _ethereumHostProvider.EnableProviderAsync();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEthereumHostProvider _ethereumHostProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private TestExample _testExample { get; set; }
    }
}
#pragma warning restore 1591

#pragma checksum "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c1fb765fe897cc5ad5235ef5289133bc7ccc11bd"
// <auto-generated/>
#pragma warning disable 1591
namespace Nethereum.Metamask.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Metamask\Nethereum.Metamask.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Metamask;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Erc20.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Metamask.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.JsonRpc.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Web3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Hex.HexTypes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Siwe.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using System.Numerics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using NftContractHandler;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using NftProject.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using System.Net;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using System.Runtime.CompilerServices;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
using Nethereum.Web3.Accounts.Managed;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class ShowNft : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
#nullable restore
#line 27 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
 if (EthereumAvailable == true && !string.IsNullOrEmpty(SelectedAccount))
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "card m-1");
            __builder.OpenElement(2, "div");
            __builder.AddAttribute(3, "class", "card-body");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "row");
            __builder.AddMarkupContent(6, "<label class=\"col-sm-3 col-form-label-lg\">Selected Account:</label>\r\n                ");
            __builder.OpenElement(7, "div");
            __builder.AddAttribute(8, "class", "col-sm-6");
#nullable restore
#line (34,22)-(34,37) 24 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
__builder.AddContent(9, SelectedAccount);

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(10, "\r\n                    ");
            __builder.AddMarkupContent(11, "<small id=\"selectedAccountHelp\" class=\"form-text text-muted\">The selected account is bound to the host (ie Metamask) on change</small>");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.OpenElement(12, "div");
            __builder.AddAttribute(13, "class", "row");
#nullable restore
#line 44 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
             foreach (var item in Nfts)
            {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(14, "div");
            __builder.AddAttribute(15, "class", "col-4");
            __builder.OpenElement(16, "div");
            __builder.AddAttribute(17, "class", "card mb-4");
            __builder.OpenElement(18, "div");
            __builder.AddAttribute(19, "class", "card-header");
            __builder.OpenElement(20, "h4");
            __builder.AddAttribute(21, "class", "my-0 font-weight-normal");
            __builder.OpenElement(22, "label");
            __builder.AddAttribute(23, "style", "font-size: 23px;color: steelblue");
#nullable restore
#line (50,82)-(50,103) 25 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
__builder.AddContent(24, item.NftMetadata.Name);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(25, "\r\n                        ");
            __builder.OpenElement(26, "img");
            __builder.AddAttribute(27, "src", 
#nullable restore
#line 53 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                   item.NftMetadata.FileUrl

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(28, "alt", "Card Image");
            __builder.AddAttribute(29, "class", "card-img-top");
            __builder.AddAttribute(30, "style", "height: 300px;");
            __builder.CloseElement();
            __builder.AddMarkupContent(31, "\r\n                        ");
            __builder.OpenElement(32, "div");
            __builder.AddAttribute(33, "class", "card-header");
            __builder.OpenElement(34, "div");
            __builder.AddAttribute(35, "class", "d-flex justify-content-between align-items-center");
            __builder.OpenElement(36, "div");
            __builder.AddAttribute(37, "class", "btn-group");
            __builder.OpenElement(38, "label");
            __builder.AddAttribute(39, "style", "font-size: 20px;color: #a51313");
            __builder.OpenElement(40, "b");
            __builder.AddContent(41, "Price : ");
#nullable restore
#line (57,95)-(57,117) 25 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
__builder.AddContent(42, item.NftMetadata.Price);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(43, "\r\n                                ");
            __builder.OpenElement(44, "a");
            __builder.AddAttribute(45, "asp-action", "Detail");
            __builder.AddAttribute(46, "asp-route-id", 
#nullable restore
#line 59 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                                                      item.TokenId

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(47, "class", "btn btn-success pull-left btn-outline-info");
            __builder.AddContent(48, "Details");
            __builder.CloseElement();
            __builder.AddMarkupContent(49, "\r\n\r\n                                ");
            __builder.OpenElement(50, "form");
            __builder.AddAttribute(51, "asp-action", "MyNfts");
            __builder.AddAttribute(52, "method", "post");
            __builder.AddAttribute(53, "enctype", "multipart/form-data");
            __builder.OpenElement(54, "button");
            __builder.AddAttribute(55, "type", "submit");
            __builder.AddAttribute(56, "asp-route-id", 
#nullable restore
#line 64 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                                                         item.TokenId

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(57, "asp-route-price", 
#nullable restore
#line 64 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                                                                                         item.NftMetadata.Price

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(58, "class", "btn btn-success pull-right btn-outline-info");
            __builder.AddContent(59, "List Nft");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(60, "\r\n                                ");
            __builder.OpenElement(61, "component");
            __builder.AddAttribute(62, "type", "typeof(BuyButton)");
            __builder.AddAttribute(63, "render-mode", "ServerPrerendered");
            __builder.AddAttribute(64, "param-TokenId", 
#nullable restore
#line 66 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                                                                                                    item.TokenId.ToString()

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(65, "param-Price", 
#nullable restore
#line 66 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
                                                                                                                                                           item.NftMetadata.Price

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 72 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 78 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
     
} else
{

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(66, "<div>\r\n    Please connect to Ethereum !\r\n</div>");
#nullable restore
#line 84 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 86 "D:\Metamask\Nethereum.Metamask.Blazor\ShowNft.razor"
      
    public IEnumerable<NftViewModel> Nfts { get; set; }
    bool EthereumAvailable { get; set; }
        string SelectedAccount { get; set; }
        BigInteger SelectedChainId { get; set; }

            protected override async Task OnAfterRenderAsync(bool firstTime)
        {
            if (firstTime)
            {
        
                _ethereumHostProvider.SelectedAccountChanged += HostProvider_SelectedAccountChanged;
                _ethereumHostProvider.NetworkChanged += HostProvider_NetworkChanged;
                _ethereumHostProvider.EnabledChanged += HostProviderOnEnabledChanged;

                EthereumAvailable = await _ethereumHostProvider.CheckProviderAvailabilityAsync();
            }
        }

    public bool col()
    {
        return collect().Result;
    }

    public async Task<bool> collect()
    {
        if (EthereumAvailable == true && !string.IsNullOrEmpty(SelectedAccount))
        {
        //var web3 = new Web3();
            //Account account = new Account();
            //ManagedAccount account = new ManagedAccount();
            
            _testExample.Web3 = await _ethereumHostProvider.GetWeb3Async();
            // _testExample.Web3.TransactionManager = _ethereumHostProvider.GetWeb3Async().Result.TransactionManager;
            // _testExample.Web3.TransactionManager.Client = _ethereumHostProvider.GetWeb3Async().Result.TransactionManager.Client;
            // // _testExample.Web3.Client = _ethereumHostProvider.GetWeb3Async().Result.TransactionManager.Client;
           // _testExample.Web3.TransactionManager = Client;
            // var ListingPrice = _testExample.Service.GetListingPriceQueryAsync().Result;
            Console.WriteLine("Here " + await _testExample.Service.TokenURIQueryAsync(6));
    //_testExample.Service.FetchMyNFTsQueryAsync().
            Console.WriteLine("Another ");
            var a = await _testExample.Service.GetListingPriceQueryAsync();
            Console.Write(a.ToString());
            var m = await _testExample.Service.FetchMyNFTsQueryAsync();
            var marketItems = m.ReturnValue1;
            Console.WriteLine(marketItems.ToString());
            Console.WriteLine(111);    
            List<NftViewModel> metaSet = new List<NftViewModel>(marketItems.Count); //I NEED TOKEN ID
            foreach (var item in marketItems)
            {
                NftViewModel tmp = new NftViewModel();
                tmp.NftMetadata = await ReadJsonFromWeb(item.TokenId);
                tmp.TokenId = item.TokenId;
                metaSet.Add(tmp); 
            }
            Nfts = metaSet;
            return true;
        }
        return false;
    }

    private async Task<NftMetadataModel> ReadJsonFromWeb(BigInteger id)
    {
        string uri = await _testExample.Service.TokenURIQueryAsync(id);

    //reading metadata json from web 
        HttpWebRequest request = WebRequest.Create(uri) as HttpWebRequest;
        WebResponse resp = request.GetResponse();
        StreamReader reader = new StreamReader(resp.GetResponseStream());
        string jsonText = reader.ReadToEnd();

        NftMetadataModel NftMetadata = JsonConvert.DeserializeObject<NftMetadataModel>(jsonText);
        return NftMetadata;
    }
    
        private async Task HostProviderOnEnabledChanged(bool enabled)
        {
            if (enabled)
            {
                await GetChainId();
                this.StateHasChanged();
            }
        }

        private async Task GetChainId()
        {
            var web3 = await _ethereumHostProvider.GetWeb3Async();
            var chainId = await web3.Eth.ChainId.SendRequestAsync();
            SelectedChainId = (BigInteger) chainId.Value;
        }

        private async Task HostProvider_SelectedAccountChanged(string account)
        {

            SelectedAccount = account;
            await GetChainId();

            await collect();

            this.StateHasChanged();
        }

        private async Task HostProvider_NetworkChanged(int chainId)
        {
            SelectedChainId = chainId;
            this.StateHasChanged();
            await Task.CompletedTask;
        }
        


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private TestExample _testExample { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NethereumSiweAuthenticatorService _nethereumSiweAuthenticatorService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEthereumHostProvider _ethereumHostProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591

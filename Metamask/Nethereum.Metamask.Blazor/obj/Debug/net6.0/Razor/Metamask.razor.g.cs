#pragma checksum "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2d6f79da54cbfb680dfb3f2f1455dc81db57c59f"
// <auto-generated/>
#pragma warning disable 1591
namespace Nethereum.Metamask.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Metamask\Nethereum.Metamask.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
using Nethereum.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
using NftContractHandler;

#line default
#line hidden
#nullable disable
    public partial class Metamask : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "b-5mztjfvre6");
#nullable restore
#line 8 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
     if (MetamaskAvailable && !string.IsNullOrEmpty(SelectedAccount))
    {
        

#line default
#line hidden
#nullable disable
#nullable restore
#line (10,10)-(10,25) 24 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
__builder.AddContent(2, SelectedAccount);

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
                        
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
     if (MetamaskAvailable && string.IsNullOrEmpty(SelectedAccount))
    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(3, "button");
            __builder.AddAttribute(4, "type", "button");
            __builder.AddAttribute(5, "class", "btnMetamask");
            __builder.AddAttribute(6, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 15 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
                                                             EnableEthereumAsync

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(7, "b-5mztjfvre6");
            __builder.AddContent(8, "Connect Metamask");
            __builder.CloseElement();
#nullable restore
#line 16 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
     if (!MetamaskAvailable)
    {

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(9, "<button class=\"btnMetamask\" disabled b-5mztjfvre6>Please Install Metamask</button>");
#nullable restore
#line 21 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 25 "D:\Metamask\Nethereum.Metamask.Blazor\Metamask.razor"
       

    bool MetamaskAvailable { get; set; }
    string SelectedAccount { get; set; }
    protected string AuthenticatedAccount { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _metamaskHostProvider.SelectedAccountChanged += MetamaskHostProvider_SelectedAccountChanged;
            MetamaskAvailable = await _metamaskHostProvider.CheckProviderAvailabilityAsync();

            if (_testExample.ConnectButtonClick)
                await EnableEthereumAsync();
            
            StateHasChanged();
        }
    }

    private async Task MetamaskHostProvider_SelectedAccountChanged(string account)
    {
        SelectedAccount = account;
        this.StateHasChanged();
    }

    protected async Task EnableEthereumAsync()
    {
        SelectedAccount = await _metamaskHostProvider.EnableProviderAsync();
        _testExample.Web3 = await _metamaskHostProvider.GetWeb3Async();
        _testExample.CurrentUserAddress = SelectedAccount;
        _testExample.ConnectButtonClick = true;
    }
    
    

   

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private TestExample _testExample { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NethereumSiweAuthenticatorService _nethereumSiweAuthenticatorService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEthereumHostProvider _metamaskHostProvider { get; set; }
    }
}
#pragma warning restore 1591
